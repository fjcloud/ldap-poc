kind: Deployment
apiVersion: apps/v1
metadata:
  name: glauth
  labels:
    app: glauth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: glauth
  template:
    metadata:
      labels:
        app: glauth
    spec:
      volumes:
        - name: config
          configMap:
            name: glauth-config
      containers:
        - resources: {}
          name: glauth
          env:
            - name: GLAUTH_ARGS
              value: '-c /app/config/config.cfg'
            - name: GLAUTH_CONFIG
              value: /app/config/config.cfg
          ports:
            - containerPort: 1389
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: /app/config
          terminationMessagePolicy: File
          image: 'docker.io/glauth/glauth:v2.3.2'

---

kind: Service
apiVersion: v1
metadata:
  name: glauth
spec:
  ports:
    - protocol: TCP
      port: 1389
      targetPort: 1389
  type: ClusterIP
  selector:
      app: glauth

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: glauth-config
data:
  config.cfg: |
    [ldap]
    enabled = true
    listen = "0.0.0.0:1389"

    [ldaps]
    enabled = false

    [backend]
    datastore = "config"
    baseDN = "dc=example,dc=org"

    [[users]]
    name = "admin"
    uidnumber = 5001
    primarygroup = 5501
    passsha256 = "6478579e37aff45f013e14eeb30b3cc56c72ccdc310123bcdf53e0333e3f416a"  # dogood

    [[users]]
    name = "testuser"
    uidnumber = 5002
    primarygroup = 5501
    passsha256 = "6478579e37aff45f013e14eeb30b3cc56c72ccdc310123bcdf53e0333e3f416a"  # dogood

    [[groups]]
    name = "users"
    gidnumber = 5501 
